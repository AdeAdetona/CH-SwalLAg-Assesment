<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-08T01:09:09 IST" name="Swag Labs Suite" finished-at="2024-05-08T01:09:37 IST" duration-ms="28086">
    <groups>
    </groups>
    <test started-at="2024-05-08T01:09:09 IST" name="Swag Labs Tests" finished-at="2024-05-08T01:09:37 IST" duration-ms="28086">
      <class name="swaglabsTests.SwagLabsNegativeTestAutomationClass">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:swaglabsTests.SwagLabsNegativeTestAutomationClass@306e95ec]" started-at="2024-05-08T01:09:32 IST" name="beforeTest" finished-at="2024-05-08T01:09:35 IST" duration-ms="2992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="validatePriceOfArticleAtCheckoutPage()[pri:0, instance:swaglabsTests.SwagLabsNegativeTestAutomationClass@306e95ec]" started-at="2024-05-08T01:09:35 IST" name="validatePriceOfArticleAtCheckoutPage" finished-at="2024-05-08T01:09:36 IST" duration-ms="1504" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Article price $29.99 does not match at cart submission page with subtotal price Item total: $59.98 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Article price $29.99 does not match at cart submission page with subtotal price Item total: $59.98 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at swaglabsTests.SwagLabsNegativeTestAutomationClass.validatePriceOfArticleAtCheckoutPage(SwagLabsNegativeTestAutomationClass.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePriceOfArticleAtCheckoutPage -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:swaglabsTests.SwagLabsNegativeTestAutomationClass@306e95ec]" started-at="2024-05-08T01:09:36 IST" name="afterTest" finished-at="2024-05-08T01:09:37 IST" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- swaglabsTests.SwagLabsNegativeTestAutomationClass -->
      <class name="swaglabsTests.SwagLabsPositiveTestAutomationClass">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:09 IST" name="beforeTest" finished-at="2024-05-08T01:09:14 IST" duration-ms="4764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="validateFirstNameIsMandatoryField()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:14 IST" name="validateFirstNameIsMandatoryField" finished-at="2024-05-08T01:09:15 IST" duration-ms="1031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFirstNameIsMandatoryField -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:15 IST" name="afterTest" finished-at="2024-05-08T01:09:15 IST" duration-ms="683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:15 IST" name="beforeTest" finished-at="2024-05-08T01:09:19 IST" duration-ms="3499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="validateLastNameIsMandatoryField()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:19 IST" name="validateLastNameIsMandatoryField" finished-at="2024-05-08T01:09:20 IST" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLastNameIsMandatoryField -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:20 IST" name="afterTest" finished-at="2024-05-08T01:09:21 IST" duration-ms="674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:21 IST" name="beforeTest" finished-at="2024-05-08T01:09:24 IST" duration-ms="3447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="validatePostalCodeIsMandatoryField()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:24 IST" name="validatePostalCodeIsMandatoryField" finished-at="2024-05-08T01:09:25 IST" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostalCodeIsMandatoryField -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:25 IST" name="afterTest" finished-at="2024-05-08T01:09:26 IST" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:26 IST" name="beforeTest" finished-at="2024-05-08T01:09:29 IST" duration-ms="3381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="validateUserIsAbleToPlaceOrder()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:29 IST" name="validateUserIsAbleToPlaceOrder" finished-at="2024-05-08T01:09:31 IST" duration-ms="1852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUserIsAbleToPlaceOrder -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:swaglabsTests.SwagLabsPositiveTestAutomationClass@5403f35f]" started-at="2024-05-08T01:09:31 IST" name="afterTest" finished-at="2024-05-08T01:09:32 IST" duration-ms="679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- swaglabsTests.SwagLabsPositiveTestAutomationClass -->
    </test> <!-- Swag Labs Tests -->
  </suite> <!-- Swag Labs Suite -->
</testng-results>
